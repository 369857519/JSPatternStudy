{"version":3,"sources":["webpack:///webpack/bootstrap 52413d7da7422137c927","webpack:///./diff/index.js","webpack:///./diff/element.js","webpack:///./diff/util.js","webpack:///./diff/diff.js","webpack:///./diff/patch.js","webpack:///./~/list-diff2/index.js","webpack:///./~/list-diff2/lib/diff.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB,YAAW,mBAAmB;AAC9B;AACA;AACA,G;;;;;;ACVA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA,wB;;;;;;AC/BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA8B,MAAM;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAiC,MAAM;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC7DA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAE;AACF;AACA,uBAAsB,gCAAgC;AACtD;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,uBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF,sBAAqB,gCAAgC;AACrD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AC5GA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,+D;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA,qB;;;;;;ACnGA;;;;;;;ACAA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,aAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 52413d7da7422137c927","el=require('./element');\ndiff=require('./diff');\npatch=require('./patch');\n\n//tagName [properties] children\nvar tree=el('div',{\n\t'id':'container'},\n\t[el('h1',{style:'color:blue'},['simple virtual dom']),\n\tel('p',['Hello,virtual-dom']),\n\tel('ul',[el('li')])\n])\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./diff/index.js\n// module id = 0\n// module chunks = 0","var _=require('./util');\n\nfunction Element(tagName,props,children){\n\tif(!(this instanceof Element)){\n\t\tif(!_.isArray(children)&&children!=null){\n\t\t\tchildren=_.slice(arguments,2).filter(_truthy)\n\t\t}\n\t\treturn new Element(tagName,props,children)\n\t}\n\n\tif(_.isArray(props)){\n\t\tchildren=props\n\t\tprops={}\n\t}\n\n\tthis.tagName=tagName\n\tthis.props=props||{}\n\tthis.children=children||[]\n\tthis.key=props?props.key:void 666\n\n\tvar count=0\n\n\t_.each(this.children,function(child){\n\t\tvar childEl=(child instanceof Element)\n\t\t?child.render():document.createTextNode(child)\n\t\tel.appendChild(childEl)\n\t})\n\n\treturn el;\n}\n\nmodule.exports=Element;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./diff/element.js\n// module id = 1\n// module chunks = 0","var _=exports\n\n_.type=function(obj){\n\treturn Object.prototype.toString.call(obj).replace(/\\[object\\s|\\]/g,'');\n}\n\n_.isArray=function isArray(list){\n\treturn _.type(list)==='Array'\n}\n\n_slice=function slice(arrLike,index){\n\treturn Array.prototype.slice.call(arrayLike,index);\n}\n\n_.truthy=function truthy(value){\n\treturn !!value\n}\n\n_.isString=function isString(list){\n\treturn _.type(list)==='String'\n}\n\n_.each=function each(array,fn){\n\tfor(var i=0,len=array.length;i<len;i++){\n\t\tfn(array[i],i);\n\t}\n}\n\n_.toArray=function toArray(listLike){\n\tif(!listLike){\n\t\treturn []\n\t}\n\n\tvar list=[]\n\n\tfor(var i=0,len=listLike.length;i<len;i++){\n\t\tlist.push(listLike[i]);\n\t}\n\n\treturn list\n}\n\n_.setAttr=function setAttr(node,key,value){\n\tswitch(key){\n\t\tcase 'style':\n\t\t\tnode.style.cssText=value\n\t\t\tbreak\n\t\tcase 'value':\n\t\t\tvar tagName=node.tagName||''\n\t\t\ttagName=tagName.toLowerCase()\n\t\t\tif(\n\t\t\t\ttagName==='input'||tagName==='textArea'){\n\t\t\t\tnode.value=value\n\t\t\t}else{\n\t\t\t\tnode.setAttribute(key,value)\n\t\t\t}\n\t\t\tbreak\n\t\tdefault:\n\t\t\tnode.setAttribute(key,value)\n\t\t\tbreak\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./diff/util.js\n// module id = 2\n// module chunks = 0","var _=require('./util');\nvar patch=require('./patch');\nvar listDiff=require('list-diff2');\n\n\n\n\n\n\n\nfunction diff(oldTree,newTree){\n\tvar index=0;\n\tvar patches={};\n\tdfsWalk(oldTree,newTree,index,patches);\n\treturn patches;\n}\n\nfunction dfsWalk (oldNode,newNode,index,patches){\n\tvar currentPatch=[];\n\t//Node被删掉了\n\tif(newNode===null){\n\n\t}else if(_.isString(oldNode)&&_.isString()){\n\t\tif(newNode!==oldNode){\n\t\t\tcurrentPatch.push({type:patch.TEXT,content:newNode})\n\t\t}\n\t}else if(\n\t\toldNode.tagName===newNode.tagName &&\n\t\toldNode.key===newNode.key\n\t\t){\n\t\tvar propsPatches=diffProps(oldNode,newNode)\n\t\tif(propsPatches){\n\t\t\tcurrentPatch.push({type:patch.PROPS,props:propsPatches});\n\t\t}\n\t\tif(!isIgnoreChildren('newNode')){\n\t\t\tdiffChildren(\n\t\t\t\toldNode.children,\n\t\t\t\tnewNode.children,\n\t\t\t\tindex,\n\t\t\t\tpatches,\n\t\t\t\tcurrentPatch\n\t\t\t\t)\n\t\t}\n\t}else{\n\t\tcurrentPatch.push({type:patch.REPLACE,node:newNode})\n\t}\n\n\tif(currentPatch.length){\n\t\tpatches[index]=currentPatch\n\t}\n}\n\nfunction diffChildren(oldChildren,newChildren,index,patches,currentPatch){\n\tvar diffs=listDiff(oldChildren,newChildren,'key');\n\tnewChildren=diffs.children;\n\n\tif(diffs.moves.length){\n\t\tvar reorderPatch={type:patch.REORDER,moves:diffs.moves};\n\t\tcurrentPatch.push(reorderPatch);\n\t}\n\n\tvar leftNode=null\n\tvar currentNodeIndex=index;\n\t_.each(oldChildren,function(child,i){\n\t\tvar newChild=newChildren[i];\n\t\tcurrentNodeIndex=(leftNode&&leftNode.count)\n\t\t?currentNodeIndex+leftNode.count+1\n\t\t:currentNodeIndex+1\n\t\tdfsWalk(child,newChild,currentNodeIndex,patches)\n\t\tleftNode=child\n\t})\n}\n\nfunction diffProps(oldNode,newNode){\n\tvar count=0;\n\tvar oldProps=oldNode.props\n\tvar newProps=newNode.props\n\n\tvar key,value\n\tvar propsPatches={}\n\n\tfor(key in oldProps){\n\t\tvalue=oldProps[key]\n\t\tif(newProps[key]!==value){\n\t\t\tcount++\n\t\t\tpropsPatches[key]=newProps[key]\n\t\t}\n\t}\n\n\tfor(key in newProps){\n\t\tvalue=newProps[key]\n\t\tif(!oldProps.hasOwnProperty(key)){\n\t\t\tcount++\n\t\t\tpropsPatches[key]=newProps[key]\n\t\t}\n\t}\n\n\tif(count===0){\n\t\treturn null\n\t}\n\n\treturn propsPatches\n}\n\nfunction isIgnoreChildren(node){\n\treturn (node.props&&node.props.hasOwnProperty('ignore'))\n}\n\nmodule.exports=diff;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./diff/diff.js\n// module id = 3\n// module chunks = 0","var _=require('./util')\n\n\n\nvar REPLACE=0;\nvar REORDER=1\nvar PROPS=2\nvar TEXT=3\n\nfunction patch(node,patches){\n\tvar walker={index:0}\n\tdfsWalk(node,walker,patches);\n}\n\nfunction dfsWalk(node,walker,patches){\n\tvar currentPatches=patches[walker.index]\n\n\tvar len=node.childNodes?node.childNodes.length:0;\n\n\tfor(var i=0;i<len;i++){\n\t\tvar child=node.childNodes[i]\n\t\twalker.index++\n\t\tdfsWalk(child,walker,patches);\n\t}\n\n\tif(currentPatches){\n\t\tapplyPatches(node,currentPatches);\n\t}\n}\n\nfunction applyPatches(node,currentPatches){\n\t_.each(currentPatches,function(currentPatch){\n\t\tswitch(currentPatch.type){\n\t\t\tcase REPLACE:\n\t\t\t\tvar newNode=(typeof currentPatch.node==='string')\n\t\t\t\t?document.createTextNode(currentPatch.node)\n\t\t\t\t:currentPatch.node.render()\n\t\t\t\tnode.parentNode.replaceChild(newNode,node)\n\t\t\t\tbreak\n\t\t\tcase REORDER:\n\t\t\t\treorderChildren(node,currentPatch.moves)\n\t\t\t\tbreak\n\t\t\tcase TEXT:\n\t\t\t\tif(node.textContent){\n\t\t\t\t\tnode.textContent=currentPatch.content\n\t\t\t\t}else{\n\t\t\t\t\tnode.nodeValue=currentPatch.content\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unkonown patch type '+currentPatch.type)\n\t\t}\n\t})\n}\n\nfunction setProps(node,props){\n\tfor(var key in props){\n\t\tif(props[key]===void 666){\n\t\t\tnode.removeAttribute(key)\n\t\t}else{\n\t\t\tvar value=props[key]\n\t\t\t_setAttr(node,key,value)\n\t\t}\n\t}\n}\n\nfunction reorderChildren(node,moves){\n\tvar staticNodeList=_.toArray(node.childNodes)\n\tvar maps={}\n\n\t_.each(staticNodeList,function(node){\n\t\tif(node.nodeType===1){\n\t\t\tvar key=node.getAttribute('key')\n\t\t\tif(key){\n\t\t\t\tmaps[key]=node\n\t\t\t}\n\t\t}\n\t})\n\n\t_.each(moves,function(move){\n\t\tvar index=move.index\n\t\tif(move.type===0){\n\t\t\tif(staticNodeList[index]===node.childNodes[index]){\n\t\t\t\tnode.removeChild(node.childNodes[index])\n\t\t\t}\n\t\t\tstaticNodeList.splice(index,1)\n\t\t}else if(move.type===1){\n\t\t\tvar insertNode=maps[move.item.key]?maps[move.item.key]:(typeof move.item==='object')?move.item.render():document.createTextNode(move.item)\n\t\t\tstaticNodeList.splice(index,0,insertNode);\n\t\t\tnode.insertBefore(insertNode,node.childNodes[index]||null);\t\t\t\n\t\t}\n\t})\n}\n\npatch.REPLACE=REPLACE\npatch.REORDER=REORDER\npatch.PROPS=PROPS\npatch.TEXT=TEXT\n\nmodule.exports=patch\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./diff/patch.js\n// module id = 4\n// module chunks = 0","module.exports = require('./lib/diff').diff\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/list-diff2/index.js\n// module id = 5\n// module chunks = 0","/**\r\n * Diff two list in O(N).\r\n * @param {Array} oldList - Original List\r\n * @param {Array} newList - List After certain insertions, removes, or moves\r\n * @return {Object} - {moves: <Array>}\r\n *                  - moves is a list of actions that telling how to remove and insert\r\n */\r\nfunction diff (oldList, newList, key) {\r\n  var oldMap = makeKeyIndexAndFree(oldList, key)\r\n  var newMap = makeKeyIndexAndFree(newList, key)\r\n\r\n  var newFree = newMap.free\r\n\r\n  var oldKeyIndex = oldMap.keyIndex\r\n  var newKeyIndex = newMap.keyIndex\r\n\r\n  var moves = []\r\n\r\n  // a simulate list to manipulate\r\n  var children = []\r\n  var i = 0\r\n  var item\r\n  var itemKey\r\n  var freeIndex = 0\r\n\r\n  // fist pass to check item in old list: if it's removed or not\r\n  while (i < oldList.length) {\r\n    item = oldList[i]\r\n    itemKey = getItemKey(item, key)\r\n    if (itemKey) {\r\n      if (!newKeyIndex.hasOwnProperty(itemKey)) {\r\n        children.push(null)\r\n      } else {\r\n        var newItemIndex = newKeyIndex[itemKey]\r\n        children.push(newList[newItemIndex])\r\n      }\r\n    } else {\r\n      var freeItem = newFree[freeIndex++]\r\n      children.push(freeItem || null)\r\n    }\r\n    i++\r\n  }\r\n\r\n  var simulateList = children.slice(0)\r\n\r\n  // remove items no longer exist\r\n  i = 0\r\n  while (i < simulateList.length) {\r\n    if (simulateList[i] === null) {\r\n      remove(i)\r\n      removeSimulate(i)\r\n    } else {\r\n      i++\r\n    }\r\n  }\r\n\r\n  // i is cursor pointing to a item in new list\r\n  // j is cursor pointing to a item in simulateList\r\n  var j = i = 0\r\n  while (i < newList.length) {\r\n    item = newList[i]\r\n    itemKey = getItemKey(item, key)\r\n\r\n    var simulateItem = simulateList[j]\r\n    var simulateItemKey = getItemKey(simulateItem, key)\r\n\r\n    if (simulateItem) {\r\n      if (itemKey === simulateItemKey) {\r\n        j++\r\n      } else {\r\n        // new item, just inesrt it\r\n        if (!oldKeyIndex.hasOwnProperty(itemKey)) {\r\n          insert(i, item)\r\n        } else {\r\n          // if remove current simulateItem make item in right place\r\n          // then just remove it\r\n          var nextItemKey = getItemKey(simulateList[j + 1], key)\r\n          if (nextItemKey === itemKey) {\r\n            remove(i)\r\n            removeSimulate(j)\r\n            j++ // after removing, current j is right, just jump to next one\r\n          } else {\r\n            // else insert item\r\n            insert(i, item)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      insert(i, item)\r\n    }\r\n\r\n    i++\r\n  }\r\n\r\n  function remove (index) {\r\n    var move = {index: index, type: 0}\r\n    moves.push(move)\r\n  }\r\n\r\n  function insert (index, item) {\r\n    var move = {index: index, item: item, type: 1}\r\n    moves.push(move)\r\n  }\r\n\r\n  function removeSimulate (index) {\r\n    simulateList.splice(index, 1)\r\n  }\r\n\r\n  return {\r\n    moves: moves,\r\n    children: children\r\n  }\r\n}\r\n\r\n/**\r\n * Convert list to key-item keyIndex object.\r\n * @param {Array} list\r\n * @param {String|Function} key\r\n */\r\nfunction makeKeyIndexAndFree (list, key) {\r\n  var keyIndex = {}\r\n  var free = []\r\n  for (var i = 0, len = list.length; i < len; i++) {\r\n    var item = list[i]\r\n    var itemKey = getItemKey(item, key)\r\n    if (itemKey) {\r\n      keyIndex[itemKey] = i\r\n    } else {\r\n      free.push(item)\r\n    }\r\n  }\r\n  return {\r\n    keyIndex: keyIndex,\r\n    free: free\r\n  }\r\n}\r\n\r\nfunction getItemKey (item, key) {\r\n  if (!item || !key) return void 666\r\n  return typeof key === 'string'\r\n    ? item[key]\r\n    : key(item)\r\n}\r\n\r\nexports.makeKeyIndexAndFree = makeKeyIndexAndFree // exports for test\r\nexports.diff = diff\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/list-diff2/lib/diff.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}